Python was conceived in the late 1980s by Guido van Rossum at Centrum Wiskunde and Informatica in the Netherlands as a successor to the ABC language, capable of exception handling and interfacing with the Amoeba operating system. Its implementation began in December 1989. Van Rossum shouldered sole responsibility for the project, as the lead developer, until 12 July 2018, when he announced his permanent vacation from his responsibilities as Python Benevolent Dictator For Life, a title the Python community bestowed upon him to reflect his long term commitment as the project chief decision maker. He now shares his leadership as a member of a five person steering council. In January 2019, active Python core developers elected Brett Cannon, Nick Coghlan, Barry Warsaw, Carol Willing and Van Rossum to a five member Steering Council to lead the project. 
Python is a multi paradigm programming language. Object oriented programming and structured programming are fully supported, and many of its features support functional programming and aspect oriented programming. Many other paradigms are supported via extensions, including design by contract and logic programming. 
Python uses dynamic typing and a combination of reference counting and a cycle detecting garbage collector for memory management. It also features dynamic name resolution, which binds method and variable names during program execution. 
Python design offers some support for functional programming in the Lisp tradition. It has filter, map, and reduce functions, list comprehensions, dictionaries, sets, and generator expressions. The standard library has two modules that implement functional tools borrowed from Haskell and Standard ML. 